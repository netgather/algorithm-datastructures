package com.neu.struct.Hash;

/**
 * 直接寻址表
 *   当关键字的全域U比较小时，直接寻址是一种简单而有效的技术
 *   对于某些应用，直接寻址表本身就可以存放动态集合中的元素。也就是说，并不把每个元素的关键字及其卫星数据
 *   都存放在直接寻址表外部的一个对象中，再有表中的某个槽的指针指向该对象，而是直接把该对象存放在表的槽中，
 *   从而节约了空间。
 * 缺点：如果全域U很大时，则在一台标准的计算机可用内存容量中，要存储大小为U大姨丈表T也许不太实际，甚至是不可能的。
 *      还有，实际存储的关键字集合K相对U来说可能很小，使得分配给T的大部分空间都将浪费掉
 * 当存储在字典中的关键字集合K比所有可能的关键字的全域U要小许多时，散列表需要的存储空间要比直接寻址表少得多。
 * 我们能将散列表的存储需求降至O(k)，同时散列表中查找一个元素的有时仍然得以保持，只需要O(1)的时间
 * Created by lihongyan on 2015/11/13.
 */
public class Direct_Address_Table {
}
